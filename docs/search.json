[
  {
    "objectID": "SOLUTIONS/Day_2.html",
    "href": "SOLUTIONS/Day_2.html",
    "title": "Day 1",
    "section": "",
    "text": "We have a special coding here - let‚Äôs write a dictionary for that:\n\nopponents codes:\n\nA = \"rock\", B = \"paper\", C = \"scissors\"\n\nmy codes:\n\nX = \"rock\", Y = \"paper\", Z = \"scissors\"\n..but the important thing is that each of these give various points, which we can basically treat as factor-levels:\n\n(games_in <- read_delim(\n  here(\"DATA\", \"input_day_02.txt\"),\n  delim = \" \",\n  col_names = FALSE,\n  skip_empty_rows = FALSE,\n  show_col_types = FALSE\n))\n\n# A tibble: 2,500 √ó 2\n   X1    X2   \n   <chr> <chr>\n 1 C     Y    \n 2 A     Z    \n 3 B     Y    \n 4 A     Z    \n 5 A     X    \n 6 A     Z    \n 7 B     Y    \n 8 A     Z    \n 9 B     Y    \n10 C     Z    \n# ‚Ä¶ with 2,490 more rows\n\ngames_fct <- games_in %>%\n  rename(opponent = X1, me = X2) %>%\n  mutate(across(.fns = as.factor))\n\n\n\n\nskimr::skim(games_fct)\n\n\nData summary\n\n\nName\ngames_fct\n\n\nNumber of rows\n2500\n\n\nNumber of columns\n2\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nopponent\n0\n1\nFALSE\n3\nB: 991, C: 795, A: 714\n\n\nme\n0\n1\nFALSE\n3\nY: 1178, Z: 771, X: 551\n\n\n\n\nlevels(games_fct$opponent)\n\n[1] \"A\" \"B\" \"C\"\n\nlevels(games_fct$me)\n\n[1] \"X\" \"Y\" \"Z\"\n\n\n‚úîÔ∏è OK, no missingness and no strange values."
  },
  {
    "objectID": "SOLUTIONS/Day_2.html#check-who-wins-per-round",
    "href": "SOLUTIONS/Day_2.html#check-who-wins-per-round",
    "title": "Day 1",
    "section": "Check who wins per round",
    "text": "Check who wins per round\nI get 0 if I lose, 3 if it‚Äôs a draw, and 6 if I win.\n\n#' returns points for player1\ncheck_rules <- function(player1, player2){\n  player1_lose <- 0\n  player1_draw <- 3\n  player1_win <- 6\n\n  all_diff <- player1 - player2\n  map_dbl(all_diff, function(cur_diff){\n    if(cur_diff == 0){ # draw\n      return(player1_draw)\n    }\n    \n    if(abs(cur_diff) == 2){ # one of them has 'rock', one 'scissors'\n      if(cur_diff < 0){\n        return(player1_win)\n      }\n      \n      return(player1_lose)\n    }\n    \n    if(cur_diff > 0){ # check who has higher value\n      return(player1_win)\n    }\n    \n    return(player1_lose)\n  })\n}\n\n(games_fct <- games_fct %>%\n  mutate(points = check_rules(as.numeric(me), as.numeric(opponent))))\n\n# A tibble: 2,500 √ó 3\n   opponent me    points\n   <fct>    <fct>  <dbl>\n 1 C        Y          0\n 2 A        Z          0\n 3 B        Y          3\n 4 A        Z          0\n 5 A        X          3\n 6 A        Z          0\n 7 B        Y          3\n 8 A        Z          0\n 9 B        Y          3\n10 C        Z          3\n# ‚Ä¶ with 2,490 more rows"
  },
  {
    "objectID": "SOLUTIONS/Day_2.html#get-total-points",
    "href": "SOLUTIONS/Day_2.html#get-total-points",
    "title": "Day 1",
    "section": "Get total points",
    "text": "Get total points\nIn addition to points gained by drawing or winning a round, I get points for what I chose (levels of factor).\n\ntotal_score <- games_fct %>%\n  mutate(total_per_round = as.numeric(me) + points) %>%\n  summarise(grand_total = sum(total_per_round))\n\n\n\nThe total score is 10941!"
  },
  {
    "objectID": "SOLUTIONS/Day_1.html",
    "href": "SOLUTIONS/Day_1.html",
    "title": "Day 1",
    "section": "",
    "text": "The list of calories of all items carried by the elves.\n\ndata_in_file <- here(\"DATA\", \"input_day_01.txt\")\n\n(calories_raw <- read_table(\n  data_in_file,\n  col_names = FALSE,\n  skip_empty_rows = FALSE,\n  show_col_types = FALSE\n))\n\n# A tibble: 2,240 √ó 1\n      X1\n   <dbl>\n 1  2991\n 2 13880\n 3 13279\n 4  1514\n 5  9507\n 6    NA\n 7  6544\n 8  9672\n 9 13044\n10  4794\n# ‚Ä¶ with 2,230 more rows\n\n\nEach elf inputs the calories their carrying in column, separating their items from the previous ones by an empty line.\n\n\nWhat an idea these elves had! I wonder which programming language they used?!"
  },
  {
    "objectID": "SOLUTIONS/Day_1.html#separate-elves",
    "href": "SOLUTIONS/Day_1.html#separate-elves",
    "title": "Day 1",
    "section": "Separate elves",
    "text": "Separate elves\nEach NA means new elf.\n\ncalories_new <- calories_raw %>%\n  rename(calories = X1) %>%\n  mutate(is_na = is.na(calories)) %>%\n  mutate(which_elf = cumsum(is_na) + 1)\ncalories_new\n\n# A tibble: 2,240 √ó 3\n   calories is_na which_elf\n      <dbl> <lgl>     <dbl>\n 1     2991 FALSE         1\n 2    13880 FALSE         1\n 3    13279 FALSE         1\n 4     1514 FALSE         1\n 5     9507 FALSE         1\n 6       NA TRUE          2\n 7     6544 FALSE         2\n 8     9672 FALSE         2\n 9    13044 FALSE         2\n10     4794 FALSE         2\n# ‚Ä¶ with 2,230 more rows"
  },
  {
    "objectID": "SOLUTIONS/Day_1.html#count-calories",
    "href": "SOLUTIONS/Day_1.html#count-calories",
    "title": "Day 1",
    "section": "Count calories",
    "text": "Count calories\n\ncalories_new %>%\n  group_by(which_elf) %>%\n  summarise(sum_cal = sum(calories, na.rm = TRUE)) %>%\n  arrange(desc(sum_cal))\n\n# A tibble: 245 √ó 2\n   which_elf sum_cal\n       <dbl>   <dbl>\n 1       213   68467\n 2       234   68143\n 3        89   66810\n 4        34   66631\n 5       209   65461\n 6       199   64966\n 7       145   64176\n 8       140   63815\n 9       110   63338\n10       150   63104\n# ‚Ä¶ with 235 more rows\n\n\nü•≥ TADA!"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome",
    "section": "",
    "text": "1\n\n\n\n\n2\n\n\n\n\n3\n\n\n\n\n4\n\n\n\n\n5\n\n\n\n\n6\n\n\n\n\n7\n\n\n\n\n8\n\n\n\n\n9\n\n\n\n\n10\n\n\n\n\n11\n\n\n\n\n12\n\n\n\n\n13\n\n\n\n\n14\n\n\n\n\n15\n\n\n\n\n16\n\n\n\n\n17\n\n\n\n\n18\n\n\n\n\n19\n\n\n\n\n20\n\n\n\n\n21\n\n\n\n\n22\n\n\n\n\n23\n\n\n\n\n24"
  }
]